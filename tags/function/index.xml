<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>function on Python Study</title><link>https://python.study/tags/function/</link><description>Recent content in function on Python Study</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 23 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://python.study/tags/function/index.xml" rel="self" type="application/rss+xml"/><item><title>Keyword-Only and Positional-Only Parameters in Function</title><link>https://python.study/p/keyword-and-positional-only-params-in-func/</link><pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate><guid>https://python.study/p/keyword-and-positional-only-params-in-func/</guid><description>&lt;img src="https://python.study/p/keyword-and-positional-only-params-in-func/cover.jpeg" alt="Featured image of post Keyword-Only and Positional-Only Parameters in Function" />In Python, function parameters can be Positional-Only, Positional-or-Keyword, or Keyword-Only. Let&amp;rsquo;s consider all three cases in the example function f:
def f(pos1, pos2, /, pos_or_kwd1, pos_or_kwd2=None, *, kwd1, kwd2): &amp;#34;&amp;#34;&amp;#34; pos1, pos2 - are Positional-Only pos_or_kwd1, pos_or_kwd2 - are Positional-or-Keyword kwd1, kwd2 - are Keyword-Only &amp;#34;&amp;#34;&amp;#34; pass The rules for defining these parameters are straightforward:
Everything before the / symbol is Positional-Only parameters. Everything after the * symbol is Keyword-Only parameters.</description></item></channel></rss>