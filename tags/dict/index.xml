<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dict on Python Study</title><link>https://python.study/tags/dict/</link><description>Recent content in dict on Python Study</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 15 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://python.study/tags/dict/index.xml" rel="self" type="application/rss+xml"/><item><title>Union Operators To dict</title><link>https://python.study/p/union-operators-to-dict/</link><pubDate>Mon, 15 May 2023 00:00:00 +0000</pubDate><guid>https://python.study/p/union-operators-to-dict/</guid><description>&lt;img src="https://python.study/p/union-operators-to-dict/cover.jpeg" alt="Featured image of post Union Operators To dict" />Let&amp;rsquo;s take a look at the new operators for dict that appeared in Python 3.9 - merge (|) and update (|=) operators.
The current ways to merge two dicts have several disadvantages:
dict.update d1.update(d2) modifies d1 in-place.
e = d1.copy(); e.update(d2) is not an expression and needs a temporary variable.
{**d1, **d2} Dict unpacking looks ugly and is not easily discoverable. Few people would be able to guess what it means the first time they see it, or think of it as the &amp;ldquo;obvious way&amp;rdquo; to merge two dicts.</description></item></channel></rss>