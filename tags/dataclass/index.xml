<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dataclass on Python Study</title><link>https://python.study/tags/dataclass/</link><description>Recent content in dataclass on Python Study</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 21 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://python.study/tags/dataclass/index.xml" rel="self" type="application/rss+xml"/><item><title>Dataclasses in Python</title><link>https://python.study/p/dataclasses-in-python/</link><pubDate>Wed, 21 Jun 2023 00:00:00 +0000</pubDate><guid>https://python.study/p/dataclasses-in-python/</guid><description>&lt;img src="https://python.study/p/dataclasses-in-python/cover.jpeg" alt="Featured image of post Dataclasses in Python" />Dataclasses are simple classes that generally only have a set of fields, without additional functionality (methods). Dataclasses are similar to structures in the C language - a composite data type that encapsulates a set of values of different types without hiding them.
On the one hand, a data class can be represented in Python as an ordinary class. But this requires the programmer to perform routine actions: defining the __init__, __str__, comparison methods __eq__, etc.</description></item></channel></rss>